<?php

namespace Smart\AnnonceBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * AnnonceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnnonceRepository extends EntityRepository
{
	public function getAnnonce($nombreParPage, $page)
	{
	// On déplace la vérification du numéro de page dans cette méthode
	if ($page < 1) {
	throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
	}
	$query = $this->createQueryBuilder('a')
	->leftJoin('a.image', 'i')
	->addSelect('i')
	->getQuery();
	
	$query->setFirstResult(($page-1) * $nombreParPage)->setMaxResults($nombreParPage);
	
	return new Paginator($query);
	}
	
	public function getAnnonceByRegion($nombreParPage, $page,$id)
	{
	
	if ($page < 1) {
	throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
	}
	$query = $this->createQueryBuilder('a')
	->leftJoin('a.image', 'i')
	->addSelect('i')
	->leftJoin('a.governorat', 'g')
	->addSelect('g')
	->where('a.governorat = :id')
	->setParameter('id', $id)
	->orderBy('a.dateinsert', 'DESC')
	->getQuery();
	
	$query->setFirstResult(($page-1) * $nombreParPage)->setMaxResults($nombreParPage);
	
	return new Paginator($query);
	}
	
	
	public function rechercheAvance($mot,$id_cat,$id_gov)
		{
		
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('SmartAnnonceBundle:Annonce', 'a')
			->where('a.categorie = :id_cat')
			->setParameter('id_cat', $id_cat)
			->andWhere('a.governorat = :id_gov')
			->setParameter('id_gov', $id_gov)
			->andWhere('a.description LIKE :mot')
			->setParameter('mot', $mot);
			
			return $qb->getQuery()->getResult();
		}
		public function findByCategorieAndGovernorat($id_cat,$id_gov)
		{
		
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('SmartAnnonceBundle:Annonce', 'a')
			->where('a.categorie = :id_cat')
			->setParameter('id_cat', $id_cat)
			->andWhere('a.governorat = :id_gov')
			->setParameter('id_gov', $id_gov)
			;
			
			return $qb->getQuery()->getResult();
		}
		public function findByCategorieAndMot($mot,$id_cat)
		{
		
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('SmartAnnonceBundle:Annonce', 'a')
			->where('a.categorie = :id_cat')
			->setParameter('id_cat', $id_cat)
			->andWhere('a.description LIKE :mot')
			->setParameter('mot', $mot);
			
			return $qb->getQuery()->getResult();
		}
		
		public function findByMot($mot)
		{
		
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
			->from('SmartAnnonceBundle:Annonce', 'a')
			
			->andWhere('a.description LIKE :mot')
			->setParameter('mot', $mot);
			
			return $qb->getQuery()->getResult();
		}
	
	
}
